from collections import deque
def bfs(graph, start_node):
    visited = set() 
    queue = deque([start_node])  
    
    bfs_order = [] 

    while queue:
        current_node = queue.popleft() 
        if current_node not in visited:
            visited.add(current_node)  
            bfs_order.append(current_node)  
          
            for neighbor in graph[current_node]:
                if neighbor not in visited:
                    queue.append(neighbor)

    return bfs_order
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F', 'G'],
    'D': ['B'],
    'E': ['B', 'H'],
    'F': ['C'],
    'G': ['C'],
    'H': ['E']
}
start_node = 'A'
bfs_traversal = bfs(graph, start_node)
print("BFS Traversal Order:", bfs_traversal)
